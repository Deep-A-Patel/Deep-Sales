@model IEnumerable<Deep_Sales.Models.Product>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Upload New Product</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImagePath)
            </th> 
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <img width="200" height="200" src="@Url.Content(item.ImagePath)" />
                </td>
               
                @{ if (UserManager.GetUserAsync(User).Result.Id == item.UserId)
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                        </td>
                    }
                    else
                    {
                        <td>
                            <a asp-action="Details" asp-route-id="@item.ProductId">Details</a>
                        </td>
                    }
                }
            </tr>
        }
    </tbody>
</table>
